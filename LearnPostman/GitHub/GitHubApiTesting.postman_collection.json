{
	"info": {
		"_postman_id": "2848ed10-d356-452c-8f0e-5cd4e6ff0cbe",
		"name": "GitHub ApiTesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CreateRepo",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ff86ce1b-e7ec-4903-b563-bbb257494f61",
						"exec": [
							"var random = Math.random().toString(36).substring(3);",
							"var repoName = \"Hello-World-\" +  random;",
							"pm.environment.set(\"repoName_env\", repoName);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aa6fc0b5-ceda-4a8c-b946-5bf645ad6327",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"console.log(jsonData);",
							"",
							"pm.test(\"Repository created in Github \" + \"\\\"\" + pm.environment.get(\"repoName_env\") + \"\\\"\" , function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"repoName_env\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{repoName_env}}\",\r\n  \"description\": \"This is your first repository\",\r\n  \"homepage\": \"https://github.com\",\r\n  \"private\": false,\r\n  \"has_issues\": true,\r\n  \"has_projects\": true,\r\n  \"has_wiki\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				},
                "description": "create new github repository"
			},
			"response": []
		},
		{
			"name": "GetRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8da94021-3e24-4fb3-85af-1e6283c0ff9e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"console.log(jsonData);",
							"",
							"pm.test(\"Repository fetched from Github \" + \"\\\"\" + pm.environment.get(\"repoName_env\") + \"\\\"\" , function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"repoName_env\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repoName_env}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d62ebef-fa7b-4c6c-a940-6c8a00404e29",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Repository deleted from Github \" + \"\\\"\" + pm.environment.get(\"repoName_env\") + \"\\\"\" , function () {",
							"    // This test simply logs the repository name",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repoName_env}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetDeleteRepo",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8da94021-3e24-4fb3-85af-1e6283c0ff9e",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"console.log(jsonData);",
							"",
							"pm.test(\"Repository not found in Github after delete \" + \"\\\"\" + pm.environment.get(\"repoName_env\") + \"\\\"\" , function () {",
							"    pm.expect(jsonData.message).to.eql(\"Not Found\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/:owner/:repo",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						":owner",
						":repo"
					],
					"variable": [
						{
							"key": "owner",
							"value": "{{owner}}"
						},
						{
							"key": "repo",
							"value": "{{repoName_env}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "d8a33d4bd8cf47079beeb85048382c5b6c791db3",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ae76ca88-8e9d-4fe9-84e4-79f3d01594df",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b469bfa5-51da-44ad-9d7e-8804c08fd591",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": []
}
